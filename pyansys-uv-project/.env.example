# PyAnsys UV Project - Environment Configuration Example
# Copy this file to .env and configure your private repository settings

# =============================================================================
# PRIVATE REPOSITORY AUTHENTICATION
# =============================================================================

# Method 1: Extra Index URL with embedded credentials
# UV_EXTRA_INDEX_URL="https://username:token@your-private-repo.com/simple"

# Method 2: Separate authentication variables
# UV_INDEX_URL="https://your-private-repo.com/simple"
# UV_KEYRING_PROVIDER="subprocess"

# Method 3: For GitLab/GitHub Personal Access Tokens
# UV_EXTRA_INDEX_URL="https://__token__:glpat-xxxxxxxxxxxxxxxxxxxx@gitlab.company.com/api/v4/projects/PROJECT_ID/packages/pypi/simple"

# =============================================================================
# SSL CONFIGURATION
# =============================================================================

# Custom SSL certificate file (if needed for internal repositories)
# SSL_CERT_FILE="/path/to/certificates.pem"

# Client certificate authentication (mTLS)
# SSL_CLIENT_CERT="/path/to/client-cert.pem"

# =============================================================================
# UV SPECIFIC SETTINGS
# =============================================================================

# Link mode for better performance on same filesystem
UV_LINK_MODE="copy"

# Cache directory (optional)
# UV_CACHE_DIR="/path/to/custom/cache"

# Python downloads behavior
# UV_PYTHON_DOWNLOADS="automatic"

# =============================================================================
# PUBLISHING CONFIGURATION (if you need to publish packages)
# =============================================================================

# Repository URL for publishing
# UV_PUBLISH_URL="https://your-private-repo.com/repository/pypi/"

# Authentication for publishing
# UV_PUBLISH_USERNAME="your-username"
# UV_PUBLISH_PASSWORD="your-password"
# OR
# UV_PUBLISH_TOKEN="your-api-token"